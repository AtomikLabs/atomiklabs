name: AtomikLabs IAC CI/CD Workflow

on:
    pull_request:
        branches:
            - dev
            - stage
            - main
        paths:
            - "**/*.yaml"
            - "**/*.yml"

env:
    AWS_REGION: "us-east-1" # Set this to your AWS deployment region

jobs:
    setup-environment:
        runs-on: ubuntu-latest
        outputs:
            env-file: ${{ steps.set-env.outputs.env-file }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Determine environment
              id: set-env
              run: |
                  if [[ $GITHUB_HEAD_REF == 'dev' ]]; then
                    echo "Setting environment file for development"
                    echo "::set-output name=env-file::environments/env.dev.json"
                  elif [[ $GITHUB_HEAD_REF == 'stage' ]]; then
                    echo "Setting environment file for staging"
                    echo "::set-output name=env-file::environments/env.stage.json"
                  elif [[ $GITHUB_HEAD_REF == 'main' ]]; then
                    echo "Setting environment file for production"
                    echo "::set-output name=env-file::environments/env.prod.json"
                  fi

    lint-and-validate:
        needs: setup-environment
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Validate CloudFormation templates
              run: |
                  # Insert your CloudFormation validation command(s) here
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    deploy:
        needs: [lint-and-validate]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set AWS Credentials and Parameter File
              run: |
                  if [[ $GITHUB_HEAD_REF == 'dev' ]]; then
                      echo "AWS_ACCESS_KEY_ID=${{ secrets.DEV_AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
                      echo "AWS_SECRET_ACCESS_KEY=${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
                      echo "PARAM_FILE=parameters-dev.json" >> $GITHUB_ENV
                  elif [[ $GITHUB_HEAD_REF == 'stage' ]]; then
                      echo "AWS_ACCESS_KEY_ID=${{ secrets.STAGE_AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
                      echo "AWS_SECRET_ACCESS_KEY=${{ secrets.STAGE_AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
                      echo "PARAM_FILE=parameters-stage.json" >> $GITHUB_ENV
                  elif [[ $GITHUB_HEAD_REF == 'main' ]]; then
                      echo "AWS_ACCESS_KEY_ID=${{ secrets.PROD_AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
                      echo "AWS_SECRET_ACCESS_KEY=${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
                      echo "PARAM_FILE=parameters-prod.json" >> $GITHUB_ENV
                  fi

            - name: Deploy CloudFormation stack
              run: |
                  aws cloudformation deploy \
                    --template-file template.yaml \
                    --stack-name my-app-${{ github.run_number }} \
                    --parameter-overrides file://$PARAM_FILE \
                    --capabilities CAPABILITY_NAMED_IAM
