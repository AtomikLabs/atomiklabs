AWSTemplateFormatVersion: "2010-09-09"
Description: "AtomikLabs Data Layer Substack Definition"

Parameters:
    EnvironmentName:
        Type: String
        Description: "The name of the environment"
        Default: "dev"
        AllowedValues:
            - "test"
            - "dev"
            - "stage"
            - "prod"
    AuroraSecurityGroup:
        Type: String
        Description: "The name of the Aurora Serverless DB security group"
    PublicSubnetGroup:
        Type: String
        Description: "The name of the public subnet group"
  
Resources:
    AtomikLabsLogsBucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Sub "atomiklabs-logs-${EnvironmentName}"
    AtomikLabsDataBucket:
        Type: "AWS::S3::Bucket"
        DependsOn:
             - AtomikLabsLogsBucket
        Properties:
            BucketName: !Sub "atomiklabs-data-bucket-${EnvironmentName}"
            LifecycleConfiguration:
                Rules:
                    - Id: "MoveToIAAfterOneWeek"
                      Status: "Enabled"
                      Transitions:
                          - TransitionInDays: 31
                            StorageClass: "STANDARD_IA"
            LoggingConfiguration:
                DestinationBucketName: !Sub "atomiklabs-logs-${EnvironmentName}"
                LogFilePrefix: "data-bucket-logs/${EnvironmentName}/"
    LambdaExecutionRole:
        Type: "AWS::IAM::Role"
        DependsOn:
             - AtomikLabsDataBucket
        Properties:
            RoleName: !Sub "lambda-s3-access-role-${EnvironmentName}"
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: "Allow"
                      Principal:
                          Service: "lambda.amazonaws.com"
                      Action: "sts:AssumeRole"
            Policies:
                - PolicyName: !Sub "lambda-s3-access-policy-${EnvironmentName}"
                  PolicyDocument:
                      Version: "2012-10-17"
                      Statement:
                          - Effect: "Allow"
                            Action:
                                - "s3:PutObject"
                                - "s3:GetObject"
                                - "s3:ListBucket"
                            Resource:
                                - !Sub "arn:aws:s3:::atomiklabs-data-bucket-${EnvironmentName}"
                                - !Sub "arn:aws:s3:::atomiklabs-data-bucket-${EnvironmentName}/*"
                - PolicyName: !Sub "lambda-polly-access-policy-${EnvironmentName}"
                  PolicyDocument:
                      Version: "2012-10-17"
                      Statement:
                          - Effect: "Allow"
                            Action:
                                - "polly:SynthesizeSpeech"
                                - "polly:DescribeVoices"
                                - "polly:GetLexicon"
                                - "polly:ListLexicons"
                                - "polly:PutLexicon"
                                - "polly:DeleteLexicon"
                            Resource: "*"
                - PolicyName: !Sub "lambda-rds-iam-auth-policy-${EnvironmentName}"
                  PolicyDocument:
                      Version: "2012-10-17"
                      Statement:
                          - Effect: "Allow"
                            Action:
                                - "rds-db:connect"
                                - "rds:DescribeDBClusters"
                                - "rds-data:ExecuteStatement"
                                - "rds-data:BeginTransaction"
                                - "rds-data:CommitTransaction"
                                - "rds-data:RollbackTransaction"
                                - "rds-data:BatchExecuteStatement"
                                - "rds-data:ExecuteSql"
                            Resource: 
                                - !Sub "arn:aws:rds-db:${AWS::Region}:${AWS::AccountId}:dbuser:*/*"
                                - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:atomiklabs-${EnvironmentName}-aurora-cluster"
            Tags:
                - Key: "Environment"
                  Value: !Ref EnvironmentName
    AtomikLabsAuroraCluster:
        Type: "AWS::RDS::DBCluster"
        Properties:
            DatabaseName: !Sub "atomiklabs_${EnvironmentName}_database"
            DBSubnetGroupName: !Ref PublicSubnetGroup
            DBClusterIdentifier: !Sub "atomiklabs-${EnvironmentName}-aurora-cluster"
            Engine: "aurora-postgresql"
            EngineMode: "serverless"
            EngineVersion: "13.3"
            MasterUsername: !Sub "{{resolve:secretsmanager:${EnvironmentName}/database-credentials:SecretString:username}}"
            MasterUserPassword: !Sub "{{resolve:secretsmanager:${EnvironmentName}/database-credentials:SecretString:password}}"
            VpcSecurityGroupIds: [!Ref AuroraSecurityGroup]
            ScalingConfiguration:
                AutoPause: true
                MinCapacity: 2
                MaxCapacity: 8
                SecondsUntilAutoPause: 300
            EnableHttpEndpoint: true
            Tags:
                - Key: "Environment"
                  Value: !Ref EnvironmentName
Outputs:
    S3LogBucketName:
        Description: "Name of the S3 Bucket for Data Layer"
        Value: !Ref AtomikLabsDataBucket
    S3DataBucketName:
        Description: "Name of the S3 Bucket for Data Layer"
        Value: !Ref AtomikLabsDataBucket
    LambdaExecutionRole:
        Description: "The name of the lambda execution role"
        Value: !Ref LambdaExecutionRole
    LambdaExecutionRoleArn:
        Description: "The name of the lambda execution role"
        Value: !GetAtt LambdaExecutionRole.Arn
    AuroraClusterEndpoint:
        Description: "The connection endpoint for the Aurora Serverless cluster."
        Value: !GetAtt AtomikLabsAuroraCluster.Endpoint.Address
    AuroraClusterIdentifier:
        Description: "The Aurora Serverless cluster identifier."
        Value: !Ref AtomikLabsAuroraCluster
